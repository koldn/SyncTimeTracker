import java.text.SimpleDateFormat
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'net.nemerosa:versioning:2.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
}

repositories {
    mavenLocal()
    jcenter()
}

apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.nemerosa.versioning'

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
    macosx = System.getProperty('os.name').contains('Mac OS')
}

def infinispanVersion = '9.0.1.Final'

mainClassName = 'ru.dkolmogortsev.LauncherKt'


dependencies {
    compileOnly     "org.codehaus.griffon:griffon-core-compile:${griffonVersion}"
    kapt            "org.codehaus.griffon:griffon-core-compile:${griffonVersion}"

    compile "org.codehaus.griffon:griffon-javafx:${griffonVersion}"
    compile "org.codehaus.griffon:griffon-guice:${griffonVersion}"
    compile group: 'org.reactfx', name: 'reactfx', version: '1.4.1'
    compile 'org.kordamp.bootstrapfx:bootstrapfx-core:0.2.1'
    compile "org.infinispan:infinispan-core:${infinispanVersion}"
    compile "org.infinispan:infinispan-query:${infinispanVersion}"
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.12'
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.7'
    compile 'de.jensd:fontawesomefx-commons:8.15'
    compile 'de.jensd:fontawesomefx-materialicons:2.2.0-5'
    compile 'de.jensd:fontawesomefx-materialdesignfont:1.7.22-4'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"

    runtime 'org.slf4j:slf4j-simple:1.7.21'

    testCompile "org.codehaus.griffon:griffon-javafx-test:${griffonVersion}"
    testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    testCompile "org.spockframework:spock-core:${spockVersion}"
}

task sourceJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

kapt {
    generateStubs = true
}

sourceSets {
    main {
        kotlin {
            srcDirs += [
                    'griffon-app/conf',
                    'griffon-app/controllers',
                    'griffon-app/models',
                    'griffon-app/views',
                    'griffon-app/services',
                    'griffon-app/lifecycle',
                    'src/main/kotlin'
            ]
        }
        resources {
            srcDirs += [
                    'griffon-app/resources',
                    'griffon-app/i18n',
                    'src/main/resources'
            ]
        }
    }
}

