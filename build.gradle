buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
}

repositories {
    mavenLocal()
    jcenter()
}

apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'idea'

def infinispanVersion = '9.0.1.Final'

mainClassName = 'ru.dkolmogortsev.LauncherKt'


dependencies {
    compile 'no.tornado:tornadofx:1.7.17'

    compile 'org.reactfx:reactfx:1.4.1'
    compile 'org.kordamp.bootstrapfx:bootstrapfx-core:0.2.1'
    compile "org.infinispan:infinispan-core:${infinispanVersion}"
    compile "org.infinispan:infinispan-query:${infinispanVersion}"
    compile 'org.controlsfx:controlsfx:8.40.12'
    compile 'com.google.guava:guava:21.0'
    compile 'joda-time:joda-time:2.9.7'
    compile 'de.jensd:fontawesomefx-commons:8.15'
    compile 'de.jensd:fontawesomefx-materialicons:2.2.0-5'
    compile 'de.jensd:fontawesomefx-materialdesignfont:1.7.22-4'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"


    runtime 'org.slf4j:slf4j-simple:1.7.21'

    testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    testCompile "org.spockframework:spock-core:${spockVersion}"
}

task sourceJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}


sourceSets {
    main {
        kotlin {
            srcDirs += [
                    'src/main/kotlin'
            ]
        }
        resources {
            srcDirs += [
                    'src/main/resources'
            ]
        }
    }
}

